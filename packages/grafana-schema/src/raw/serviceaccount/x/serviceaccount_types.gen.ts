// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     kinds/gen.go
// Using jennies:
//     TSTypesJenny
//     LatestMajorsOrXJenny
//
// Run 'make gen-cue' from repository root to regenerate.

/**
 * OrgRole is a Grafana Organization Role which can be 'Viewer', 'Editor', 'Admin'.
 */
export type OrgRole = ('Admin' | 'Editor' | 'Viewer');

export interface ServiceAccount {
  /**
   * AccessControl metadata associated with a given resource.
   */
  accessControl?: Record<string, boolean>;
  /**
   * AvatarUrl is the service account's avatar URL. It allows the frontend to display a picture in front
   * of the service account.
   */
  avatarUrl: string;
  /**
   * Created indicates when the service account was created.
   */
  created?: string;
  /**
   * ID is the unique identifier of the service account in the database.
   */
  id: number;
  /**
   * IsDisabled indicates if the service account is disabled.
   */
  isDisabled: boolean;
  /**
   * Login of the service account.
   */
  login: string;
  /**
   * Name of the service account.
   */
  name: string;
  /**
   * OrgId is the ID of an organisation the service account belongs to.
   */
  orgId: number;
  /**
   * Role is the Grafana organization role of the service account which can be 'Viewer', 'Editor', 'Admin'.
   */
  role: OrgRole;
  /**
   * Teams is a list of teams the service account belongs to.
   */
  teams?: Array<string>;
  /**
   * Tokens is the number of active tokens for the service account.
   * Tokens are used to authenticate the service account against Grafana.
   */
  tokens: number;
  /**
   * Updated indicates when the service account was updated.
   */
  updated?: string;
}

export const defaultServiceAccount: Partial<ServiceAccount> = {
  teams: [],
};
