// Code generated - EDITING IS FUTILE. DO NOT EDIT.
//
// Generated by:
//     public/app/plugins/gen.go
// Using jennies:
//     PluginGoTypesJenny
//
// Run 'make gen-cue' from repository root to regenerate.

package dataquery

import (
	"encoding/json"
)

// Defines values for AverageType.
const (
	AverageTypeAvg AverageType = "avg"
)

// Defines values for BaseBucketAggregationType.
const (
	BaseBucketAggregationTypeDateHistogram BaseBucketAggregationType = "date_histogram"
	BaseBucketAggregationTypeFilters       BaseBucketAggregationType = "filters"
	BaseBucketAggregationTypeGeohashGrid   BaseBucketAggregationType = "geohash_grid"
	BaseBucketAggregationTypeHistogram     BaseBucketAggregationType = "histogram"
	BaseBucketAggregationTypeNested        BaseBucketAggregationType = "nested"
	BaseBucketAggregationTypeTerms         BaseBucketAggregationType = "terms"
)

// Defines values for BaseMetricAggregationType.
const (
	BaseMetricAggregationTypeAvg           BaseMetricAggregationType = "avg"
	BaseMetricAggregationTypeBucketScript  BaseMetricAggregationType = "bucket_script"
	BaseMetricAggregationTypeCardinality   BaseMetricAggregationType = "cardinality"
	BaseMetricAggregationTypeCount         BaseMetricAggregationType = "count"
	BaseMetricAggregationTypeCumulativeSum BaseMetricAggregationType = "cumulative_sum"
	BaseMetricAggregationTypeDerivative    BaseMetricAggregationType = "derivative"
	BaseMetricAggregationTypeExtendedStats BaseMetricAggregationType = "extended_stats"
	BaseMetricAggregationTypeLogs          BaseMetricAggregationType = "logs"
	BaseMetricAggregationTypeMax           BaseMetricAggregationType = "max"
	BaseMetricAggregationTypeMin           BaseMetricAggregationType = "min"
	BaseMetricAggregationTypeMovingAvg     BaseMetricAggregationType = "moving_avg"
	BaseMetricAggregationTypeMovingFn      BaseMetricAggregationType = "moving_fn"
	BaseMetricAggregationTypePercentiles   BaseMetricAggregationType = "percentiles"
	BaseMetricAggregationTypeRate          BaseMetricAggregationType = "rate"
	BaseMetricAggregationTypeRawData       BaseMetricAggregationType = "raw_data"
	BaseMetricAggregationTypeRawDocument   BaseMetricAggregationType = "raw_document"
	BaseMetricAggregationTypeSerialDiff    BaseMetricAggregationType = "serial_diff"
	BaseMetricAggregationTypeSum           BaseMetricAggregationType = "sum"
	BaseMetricAggregationTypeTopMetrics    BaseMetricAggregationType = "top_metrics"
)

// Defines values for BaseMovingAverageModelSettingsModel.
const (
	BaseMovingAverageModelSettingsModelEwma        BaseMovingAverageModelSettingsModel = "ewma"
	BaseMovingAverageModelSettingsModelHolt        BaseMovingAverageModelSettingsModel = "holt"
	BaseMovingAverageModelSettingsModelHoltWinters BaseMovingAverageModelSettingsModel = "holt_winters"
	BaseMovingAverageModelSettingsModelLinear      BaseMovingAverageModelSettingsModel = "linear"
	BaseMovingAverageModelSettingsModelSimple      BaseMovingAverageModelSettingsModel = "simple"
)

// Defines values for BasePipelineMetricAggregationType.
const (
	BasePipelineMetricAggregationTypeBucketScript  BasePipelineMetricAggregationType = "bucket_script"
	BasePipelineMetricAggregationTypeCumulativeSum BasePipelineMetricAggregationType = "cumulative_sum"
	BasePipelineMetricAggregationTypeDerivative    BasePipelineMetricAggregationType = "derivative"
	BasePipelineMetricAggregationTypeMovingAvg     BasePipelineMetricAggregationType = "moving_avg"
	BasePipelineMetricAggregationTypeMovingFn      BasePipelineMetricAggregationType = "moving_fn"
	BasePipelineMetricAggregationTypeSerialDiff    BasePipelineMetricAggregationType = "serial_diff"
)

// Defines values for BucketAggregationSettingsOrder.
const (
	BucketAggregationSettingsOrderAsc  BucketAggregationSettingsOrder = "asc"
	BucketAggregationSettingsOrderDesc BucketAggregationSettingsOrder = "desc"
)

// Defines values for BucketAggregationType.
const (
	BucketAggregationTypeDateHistogram BucketAggregationType = "date_histogram"
	BucketAggregationTypeFilters       BucketAggregationType = "filters"
	BucketAggregationTypeGeohashGrid   BucketAggregationType = "geohash_grid"
	BucketAggregationTypeHistogram     BucketAggregationType = "histogram"
	BucketAggregationTypeNested        BucketAggregationType = "nested"
	BucketAggregationTypeTerms         BucketAggregationType = "terms"
)

// Defines values for BucketAggregationWithFieldType.
const (
	BucketAggregationWithFieldTypeDateHistogram BucketAggregationWithFieldType = "date_histogram"
	BucketAggregationWithFieldTypeFilters       BucketAggregationWithFieldType = "filters"
	BucketAggregationWithFieldTypeGeohashGrid   BucketAggregationWithFieldType = "geohash_grid"
	BucketAggregationWithFieldTypeHistogram     BucketAggregationWithFieldType = "histogram"
	BucketAggregationWithFieldTypeNested        BucketAggregationWithFieldType = "nested"
	BucketAggregationWithFieldTypeTerms         BucketAggregationWithFieldType = "terms"
)

// Defines values for BucketScriptType.
const (
	BucketScriptTypeBucketScript BucketScriptType = "bucket_script"
)

// Defines values for CountType.
const (
	CountTypeCount CountType = "count"
)

// Defines values for CumulativeSumType.
const (
	CumulativeSumTypeCumulativeSum CumulativeSumType = "cumulative_sum"
)

// Defines values for DateHistogramType.
const (
	DateHistogramTypeDateHistogram DateHistogramType = "date_histogram"
)

// Defines values for DerivativeType.
const (
	DerivativeTypeDerivative DerivativeType = "derivative"
)

// Defines values for BucketAggsSettingsOrder.
const (
	BucketAggsSettingsOrderAsc  BucketAggsSettingsOrder = "asc"
	BucketAggsSettingsOrderDesc BucketAggsSettingsOrder = "desc"
)

// Defines values for ExtendedStatValue.
const (
	ExtendedStatValueAvg                     ExtendedStatValue = "avg"
	ExtendedStatValueCount                   ExtendedStatValue = "count"
	ExtendedStatValueMax                     ExtendedStatValue = "max"
	ExtendedStatValueMin                     ExtendedStatValue = "min"
	ExtendedStatValueStdDeviation            ExtendedStatValue = "std_deviation"
	ExtendedStatValueStdDeviationBoundsLower ExtendedStatValue = "std_deviation_bounds_lower"
	ExtendedStatValueStdDeviationBoundsUpper ExtendedStatValue = "std_deviation_bounds_upper"
	ExtendedStatValueSum                     ExtendedStatValue = "sum"
)

// Defines values for ExtendedStatMetaType.
const (
	ExtendedStatMetaTypeAvg                     ExtendedStatMetaType = "avg"
	ExtendedStatMetaTypeCount                   ExtendedStatMetaType = "count"
	ExtendedStatMetaTypeMax                     ExtendedStatMetaType = "max"
	ExtendedStatMetaTypeMin                     ExtendedStatMetaType = "min"
	ExtendedStatMetaTypeStdDeviation            ExtendedStatMetaType = "std_deviation"
	ExtendedStatMetaTypeStdDeviationBoundsLower ExtendedStatMetaType = "std_deviation_bounds_lower"
	ExtendedStatMetaTypeStdDeviationBoundsUpper ExtendedStatMetaType = "std_deviation_bounds_upper"
	ExtendedStatMetaTypeSum                     ExtendedStatMetaType = "sum"
)

// Defines values for ExtendedStatsType.
const (
	ExtendedStatsTypeExtendedStats ExtendedStatsType = "extended_stats"
)

// Defines values for FiltersType.
const (
	FiltersTypeFilters FiltersType = "filters"
)

// Defines values for GeoHashGridType.
const (
	GeoHashGridTypeGeohashGrid GeoHashGridType = "geohash_grid"
)

// Defines values for HistogramType.
const (
	HistogramTypeHistogram HistogramType = "histogram"
)

// Defines values for LogsType.
const (
	LogsTypeLogs LogsType = "logs"
)

// Defines values for MaxType.
const (
	MaxTypeMax MaxType = "max"
)

// Defines values for MetricAggregationType.
const (
	MetricAggregationTypeAvg           MetricAggregationType = "avg"
	MetricAggregationTypeBucketScript  MetricAggregationType = "bucket_script"
	MetricAggregationTypeCardinality   MetricAggregationType = "cardinality"
	MetricAggregationTypeCount         MetricAggregationType = "count"
	MetricAggregationTypeCumulativeSum MetricAggregationType = "cumulative_sum"
	MetricAggregationTypeDerivative    MetricAggregationType = "derivative"
	MetricAggregationTypeExtendedStats MetricAggregationType = "extended_stats"
	MetricAggregationTypeLogs          MetricAggregationType = "logs"
	MetricAggregationTypeMax           MetricAggregationType = "max"
	MetricAggregationTypeMin           MetricAggregationType = "min"
	MetricAggregationTypeMovingAvg     MetricAggregationType = "moving_avg"
	MetricAggregationTypeMovingFn      MetricAggregationType = "moving_fn"
	MetricAggregationTypePercentiles   MetricAggregationType = "percentiles"
	MetricAggregationTypeRate          MetricAggregationType = "rate"
	MetricAggregationTypeRawData       MetricAggregationType = "raw_data"
	MetricAggregationTypeRawDocument   MetricAggregationType = "raw_document"
	MetricAggregationTypeSerialDiff    MetricAggregationType = "serial_diff"
	MetricAggregationTypeSum           MetricAggregationType = "sum"
	MetricAggregationTypeTopMetrics    MetricAggregationType = "top_metrics"
)

// Defines values for MetricAggregationWithFieldType.
const (
	MetricAggregationWithFieldTypeAvg           MetricAggregationWithFieldType = "avg"
	MetricAggregationWithFieldTypeBucketScript  MetricAggregationWithFieldType = "bucket_script"
	MetricAggregationWithFieldTypeCardinality   MetricAggregationWithFieldType = "cardinality"
	MetricAggregationWithFieldTypeCount         MetricAggregationWithFieldType = "count"
	MetricAggregationWithFieldTypeCumulativeSum MetricAggregationWithFieldType = "cumulative_sum"
	MetricAggregationWithFieldTypeDerivative    MetricAggregationWithFieldType = "derivative"
	MetricAggregationWithFieldTypeExtendedStats MetricAggregationWithFieldType = "extended_stats"
	MetricAggregationWithFieldTypeLogs          MetricAggregationWithFieldType = "logs"
	MetricAggregationWithFieldTypeMax           MetricAggregationWithFieldType = "max"
	MetricAggregationWithFieldTypeMin           MetricAggregationWithFieldType = "min"
	MetricAggregationWithFieldTypeMovingAvg     MetricAggregationWithFieldType = "moving_avg"
	MetricAggregationWithFieldTypeMovingFn      MetricAggregationWithFieldType = "moving_fn"
	MetricAggregationWithFieldTypePercentiles   MetricAggregationWithFieldType = "percentiles"
	MetricAggregationWithFieldTypeRate          MetricAggregationWithFieldType = "rate"
	MetricAggregationWithFieldTypeRawData       MetricAggregationWithFieldType = "raw_data"
	MetricAggregationWithFieldTypeRawDocument   MetricAggregationWithFieldType = "raw_document"
	MetricAggregationWithFieldTypeSerialDiff    MetricAggregationWithFieldType = "serial_diff"
	MetricAggregationWithFieldTypeSum           MetricAggregationWithFieldType = "sum"
	MetricAggregationWithFieldTypeTopMetrics    MetricAggregationWithFieldType = "top_metrics"
)

// Defines values for MetricAggregationWithInlineScriptType.
const (
	MetricAggregationWithInlineScriptTypeAvg           MetricAggregationWithInlineScriptType = "avg"
	MetricAggregationWithInlineScriptTypeBucketScript  MetricAggregationWithInlineScriptType = "bucket_script"
	MetricAggregationWithInlineScriptTypeCardinality   MetricAggregationWithInlineScriptType = "cardinality"
	MetricAggregationWithInlineScriptTypeCount         MetricAggregationWithInlineScriptType = "count"
	MetricAggregationWithInlineScriptTypeCumulativeSum MetricAggregationWithInlineScriptType = "cumulative_sum"
	MetricAggregationWithInlineScriptTypeDerivative    MetricAggregationWithInlineScriptType = "derivative"
	MetricAggregationWithInlineScriptTypeExtendedStats MetricAggregationWithInlineScriptType = "extended_stats"
	MetricAggregationWithInlineScriptTypeLogs          MetricAggregationWithInlineScriptType = "logs"
	MetricAggregationWithInlineScriptTypeMax           MetricAggregationWithInlineScriptType = "max"
	MetricAggregationWithInlineScriptTypeMin           MetricAggregationWithInlineScriptType = "min"
	MetricAggregationWithInlineScriptTypeMovingAvg     MetricAggregationWithInlineScriptType = "moving_avg"
	MetricAggregationWithInlineScriptTypeMovingFn      MetricAggregationWithInlineScriptType = "moving_fn"
	MetricAggregationWithInlineScriptTypePercentiles   MetricAggregationWithInlineScriptType = "percentiles"
	MetricAggregationWithInlineScriptTypeRate          MetricAggregationWithInlineScriptType = "rate"
	MetricAggregationWithInlineScriptTypeRawData       MetricAggregationWithInlineScriptType = "raw_data"
	MetricAggregationWithInlineScriptTypeRawDocument   MetricAggregationWithInlineScriptType = "raw_document"
	MetricAggregationWithInlineScriptTypeSerialDiff    MetricAggregationWithInlineScriptType = "serial_diff"
	MetricAggregationWithInlineScriptTypeSum           MetricAggregationWithInlineScriptType = "sum"
	MetricAggregationWithInlineScriptTypeTopMetrics    MetricAggregationWithInlineScriptType = "top_metrics"
)

// Defines values for MetricAggregationWithMissingSupportType.
const (
	MetricAggregationWithMissingSupportTypeAvg           MetricAggregationWithMissingSupportType = "avg"
	MetricAggregationWithMissingSupportTypeBucketScript  MetricAggregationWithMissingSupportType = "bucket_script"
	MetricAggregationWithMissingSupportTypeCardinality   MetricAggregationWithMissingSupportType = "cardinality"
	MetricAggregationWithMissingSupportTypeCount         MetricAggregationWithMissingSupportType = "count"
	MetricAggregationWithMissingSupportTypeCumulativeSum MetricAggregationWithMissingSupportType = "cumulative_sum"
	MetricAggregationWithMissingSupportTypeDerivative    MetricAggregationWithMissingSupportType = "derivative"
	MetricAggregationWithMissingSupportTypeExtendedStats MetricAggregationWithMissingSupportType = "extended_stats"
	MetricAggregationWithMissingSupportTypeLogs          MetricAggregationWithMissingSupportType = "logs"
	MetricAggregationWithMissingSupportTypeMax           MetricAggregationWithMissingSupportType = "max"
	MetricAggregationWithMissingSupportTypeMin           MetricAggregationWithMissingSupportType = "min"
	MetricAggregationWithMissingSupportTypeMovingAvg     MetricAggregationWithMissingSupportType = "moving_avg"
	MetricAggregationWithMissingSupportTypeMovingFn      MetricAggregationWithMissingSupportType = "moving_fn"
	MetricAggregationWithMissingSupportTypePercentiles   MetricAggregationWithMissingSupportType = "percentiles"
	MetricAggregationWithMissingSupportTypeRate          MetricAggregationWithMissingSupportType = "rate"
	MetricAggregationWithMissingSupportTypeRawData       MetricAggregationWithMissingSupportType = "raw_data"
	MetricAggregationWithMissingSupportTypeRawDocument   MetricAggregationWithMissingSupportType = "raw_document"
	MetricAggregationWithMissingSupportTypeSerialDiff    MetricAggregationWithMissingSupportType = "serial_diff"
	MetricAggregationWithMissingSupportTypeSum           MetricAggregationWithMissingSupportType = "sum"
	MetricAggregationWithMissingSupportTypeTopMetrics    MetricAggregationWithMissingSupportType = "top_metrics"
)

// Defines values for MinType.
const (
	MinTypeMin MinType = "min"
)

// Defines values for MovingAverageType.
const (
	MovingAverageTypeMovingAvg MovingAverageType = "moving_avg"
)

// Defines values for MovingAverageEWMAModelSettingsModel.
const (
	MovingAverageEWMAModelSettingsModelEwma MovingAverageEWMAModelSettingsModel = "ewma"
)

// Defines values for MovingAverageHoltModelSettingsModel.
const (
	MovingAverageHoltModelSettingsModelHolt MovingAverageHoltModelSettingsModel = "holt"
)

// Defines values for MovingAverageHoltWintersModelSettingsModel.
const (
	MovingAverageHoltWintersModelSettingsModelHoltWinters MovingAverageHoltWintersModelSettingsModel = "holt_winters"
)

// Defines values for MovingAverageLinearModelSettingsModel.
const (
	MovingAverageLinearModelSettingsModelLinear MovingAverageLinearModelSettingsModel = "linear"
)

// Defines values for MovingAverageModel.
const (
	MovingAverageModelEwma        MovingAverageModel = "ewma"
	MovingAverageModelHolt        MovingAverageModel = "holt"
	MovingAverageModelHoltWinters MovingAverageModel = "holt_winters"
	MovingAverageModelLinear      MovingAverageModel = "linear"
	MovingAverageModelSimple      MovingAverageModel = "simple"
)

// Defines values for MovingAverageModelOptionValue.
const (
	MovingAverageModelOptionValueEwma        MovingAverageModelOptionValue = "ewma"
	MovingAverageModelOptionValueHolt        MovingAverageModelOptionValue = "holt"
	MovingAverageModelOptionValueHoltWinters MovingAverageModelOptionValue = "holt_winters"
	MovingAverageModelOptionValueLinear      MovingAverageModelOptionValue = "linear"
	MovingAverageModelOptionValueSimple      MovingAverageModelOptionValue = "simple"
)

// Defines values for MovingAverageSimpleModelSettingsModel.
const (
	MovingAverageSimpleModelSettingsModelSimple MovingAverageSimpleModelSettingsModel = "simple"
)

// Defines values for MovingFunctionType.
const (
	MovingFunctionTypeMovingFn MovingFunctionType = "moving_fn"
)

// Defines values for NestedType.
const (
	NestedTypeNested NestedType = "nested"
)

// Defines values for PercentilesType.
const (
	PercentilesTypePercentiles PercentilesType = "percentiles"
)

// Defines values for PipelineMetricAggregationType.
const (
	PipelineMetricAggregationTypeBucketScript  PipelineMetricAggregationType = "bucket_script"
	PipelineMetricAggregationTypeCumulativeSum PipelineMetricAggregationType = "cumulative_sum"
	PipelineMetricAggregationTypeDerivative    PipelineMetricAggregationType = "derivative"
	PipelineMetricAggregationTypeMovingAvg     PipelineMetricAggregationType = "moving_avg"
	PipelineMetricAggregationTypeMovingFn      PipelineMetricAggregationType = "moving_fn"
	PipelineMetricAggregationTypeSerialDiff    PipelineMetricAggregationType = "serial_diff"
)

// Defines values for PipelineMetricAggregationWithMultipleBucketPathsType.
const (
	PipelineMetricAggregationWithMultipleBucketPathsTypeAvg           PipelineMetricAggregationWithMultipleBucketPathsType = "avg"
	PipelineMetricAggregationWithMultipleBucketPathsTypeBucketScript  PipelineMetricAggregationWithMultipleBucketPathsType = "bucket_script"
	PipelineMetricAggregationWithMultipleBucketPathsTypeCardinality   PipelineMetricAggregationWithMultipleBucketPathsType = "cardinality"
	PipelineMetricAggregationWithMultipleBucketPathsTypeCount         PipelineMetricAggregationWithMultipleBucketPathsType = "count"
	PipelineMetricAggregationWithMultipleBucketPathsTypeCumulativeSum PipelineMetricAggregationWithMultipleBucketPathsType = "cumulative_sum"
	PipelineMetricAggregationWithMultipleBucketPathsTypeDerivative    PipelineMetricAggregationWithMultipleBucketPathsType = "derivative"
	PipelineMetricAggregationWithMultipleBucketPathsTypeExtendedStats PipelineMetricAggregationWithMultipleBucketPathsType = "extended_stats"
	PipelineMetricAggregationWithMultipleBucketPathsTypeLogs          PipelineMetricAggregationWithMultipleBucketPathsType = "logs"
	PipelineMetricAggregationWithMultipleBucketPathsTypeMax           PipelineMetricAggregationWithMultipleBucketPathsType = "max"
	PipelineMetricAggregationWithMultipleBucketPathsTypeMin           PipelineMetricAggregationWithMultipleBucketPathsType = "min"
	PipelineMetricAggregationWithMultipleBucketPathsTypeMovingAvg     PipelineMetricAggregationWithMultipleBucketPathsType = "moving_avg"
	PipelineMetricAggregationWithMultipleBucketPathsTypeMovingFn      PipelineMetricAggregationWithMultipleBucketPathsType = "moving_fn"
	PipelineMetricAggregationWithMultipleBucketPathsTypePercentiles   PipelineMetricAggregationWithMultipleBucketPathsType = "percentiles"
	PipelineMetricAggregationWithMultipleBucketPathsTypeRate          PipelineMetricAggregationWithMultipleBucketPathsType = "rate"
	PipelineMetricAggregationWithMultipleBucketPathsTypeRawData       PipelineMetricAggregationWithMultipleBucketPathsType = "raw_data"
	PipelineMetricAggregationWithMultipleBucketPathsTypeRawDocument   PipelineMetricAggregationWithMultipleBucketPathsType = "raw_document"
	PipelineMetricAggregationWithMultipleBucketPathsTypeSerialDiff    PipelineMetricAggregationWithMultipleBucketPathsType = "serial_diff"
	PipelineMetricAggregationWithMultipleBucketPathsTypeSum           PipelineMetricAggregationWithMultipleBucketPathsType = "sum"
	PipelineMetricAggregationWithMultipleBucketPathsTypeTopMetrics    PipelineMetricAggregationWithMultipleBucketPathsType = "top_metrics"
)

// Defines values for RateType.
const (
	RateTypeRate RateType = "rate"
)

// Defines values for RawDataType.
const (
	RawDataTypeRawData RawDataType = "raw_data"
)

// Defines values for RawDocumentType.
const (
	RawDocumentTypeRawDocument RawDocumentType = "raw_document"
)

// Defines values for SerialDiffType.
const (
	SerialDiffTypeSerialDiff SerialDiffType = "serial_diff"
)

// Defines values for SumType.
const (
	SumTypeSum SumType = "sum"
)

// Defines values for TermsSettingsOrder.
const (
	TermsSettingsOrderAsc  TermsSettingsOrder = "asc"
	TermsSettingsOrderDesc TermsSettingsOrder = "desc"
)

// Defines values for TermsType.
const (
	TermsTypeTerms TermsType = "terms"
)

// Defines values for TermsOrder.
const (
	TermsOrderAsc  TermsOrder = "asc"
	TermsOrderDesc TermsOrder = "desc"
)

// Defines values for TopMetricsType.
const (
	TopMetricsTypeTopMetrics TopMetricsType = "top_metrics"
)

// Defines values for UniqueCountType.
const (
	UniqueCountTypeCardinality UniqueCountType = "cardinality"
)

// Average defines model for Average.
type Average struct {
	Field    *string `json:"field,omitempty"`
	Hide     *bool   `json:"hide,omitempty"`
	Id       string  `json:"id"`
	Settings *struct {
		Missing *string      `json:"missing,omitempty"`
		Script  *interface{} `json:"script,omitempty"`
	} `json:"settings,omitempty"`
	Type AverageType `json:"type"`
}

// AverageType defines model for Average.Type.
type AverageType string

// BaseBucketAggregation defines model for BaseBucketAggregation.
type BaseBucketAggregation struct {
	Id       string                    `json:"id"`
	Settings *interface{}              `json:"settings,omitempty"`
	Type     BaseBucketAggregationType `json:"type"`
}

// BaseBucketAggregationType defines model for BaseBucketAggregation.Type.
type BaseBucketAggregationType string

// BaseMetricAggregation defines model for BaseMetricAggregation.
type BaseMetricAggregation struct {
	Hide *bool                     `json:"hide,omitempty"`
	Id   string                    `json:"id"`
	Type BaseMetricAggregationType `json:"type"`
}

// BaseMetricAggregationType defines model for BaseMetricAggregation.Type.
type BaseMetricAggregationType string

// BaseMovingAverageModelSettings defines model for BaseMovingAverageModelSettings.
type BaseMovingAverageModelSettings struct {
	Model   BaseMovingAverageModelSettingsModel `json:"model"`
	Predict string                              `json:"predict"`
	Window  string                              `json:"window"`
}

// BaseMovingAverageModelSettingsModel defines model for BaseMovingAverageModelSettings.Model.
type BaseMovingAverageModelSettingsModel string

// BasePipelineMetricAggregation defines model for BasePipelineMetricAggregation.
type BasePipelineMetricAggregation struct {
	Field       *string                           `json:"field,omitempty"`
	Hide        *bool                             `json:"hide,omitempty"`
	Id          string                            `json:"id"`
	PipelineAgg *string                           `json:"pipelineAgg,omitempty"`
	Type        BasePipelineMetricAggregationType `json:"type"`
}

// BasePipelineMetricAggregationType defines model for BasePipelineMetricAggregation.Type.
type BasePipelineMetricAggregationType string

// BucketAggregation defines model for BucketAggregation.
type BucketAggregation struct {
	Field    *string `json:"field,omitempty"`
	Id       *string `json:"id,omitempty"`
	Settings *struct {
		Filters []struct {
			Label string `json:"label"`
			Query string `json:"query"`
		} `json:"filters,omitempty"`
		Interval    *string                         `json:"interval,omitempty"`
		MinDocCount *string                         `json:"min_doc_count,omitempty"`
		Missing     *string                         `json:"missing,omitempty"`
		Offset      *string                         `json:"offset,omitempty"`
		Order       *BucketAggregationSettingsOrder `json:"order,omitempty"`
		OrderBy     *string                         `json:"orderBy,omitempty"`
		Precision   *string                         `json:"precision,omitempty"`
		Size        *string                         `json:"size,omitempty"`
		TimeZone    *string                         `json:"timeZone,omitempty"`
		TrimEdges   *string                         `json:"trimEdges,omitempty"`
	} `json:"settings,omitempty"`
	Type  *interface{} `json:"type,omitempty"`
	union json.RawMessage
}

// BucketAggregationSettingsOrder defines model for BucketAggregation.Settings.Order.
type BucketAggregationSettingsOrder string

// BucketAggregationType defines model for BucketAggregationType.
type BucketAggregationType string

// BucketAggregationWithField defines model for BucketAggregationWithField.
type BucketAggregationWithField struct {
	Field    *string                        `json:"field,omitempty"`
	Id       string                         `json:"id"`
	Settings *interface{}                   `json:"settings,omitempty"`
	Type     BucketAggregationWithFieldType `json:"type"`
}

// BucketAggregationWithFieldType defines model for BucketAggregationWithField.Type.
type BucketAggregationWithFieldType string

// BucketScript defines model for BucketScript.
type BucketScript struct {
	Hide              *bool  `json:"hide,omitempty"`
	Id                string `json:"id"`
	PipelineVariables []struct {
		Name        string `json:"name"`
		PipelineAgg string `json:"pipelineAgg"`
	} `json:"pipelineVariables,omitempty"`
	Settings *struct {
		Script *interface{} `json:"script,omitempty"`
	} `json:"settings,omitempty"`
	Type BucketScriptType `json:"type"`
}

// BucketScriptType defines model for BucketScript.Type.
type BucketScriptType string

// Count defines model for Count.
type Count struct {
	Hide *bool     `json:"hide,omitempty"`
	Id   string    `json:"id"`
	Type CountType `json:"type"`
}

// CountType defines model for Count.Type.
type CountType string

// CumulativeSum defines model for CumulativeSum.
type CumulativeSum struct {
	Field       *string `json:"field,omitempty"`
	Hide        *bool   `json:"hide,omitempty"`
	Id          string  `json:"id"`
	PipelineAgg *string `json:"pipelineAgg,omitempty"`
	Settings    *struct {
		Format *string `json:"format,omitempty"`
	} `json:"settings,omitempty"`
	Type CumulativeSumType `json:"type"`
}

// CumulativeSumType defines model for CumulativeSum.Type.
type CumulativeSumType string

// DateHistogram defines model for DateHistogram.
type DateHistogram struct {
	Field    *string `json:"field,omitempty"`
	Id       string  `json:"id"`
	Settings *struct {
		Interval    *string `json:"interval,omitempty"`
		MinDocCount *string `json:"min_doc_count,omitempty"`
		Offset      *string `json:"offset,omitempty"`
		TimeZone    *string `json:"timeZone,omitempty"`
		TrimEdges   *string `json:"trimEdges,omitempty"`
	} `json:"settings,omitempty"`
	Type DateHistogramType `json:"type"`
}

// DateHistogramType defines model for DateHistogram.Type.
type DateHistogramType string

// DateHistogramSettings defines model for DateHistogramSettings.
type DateHistogramSettings struct {
	Interval    *string `json:"interval,omitempty"`
	MinDocCount *string `json:"min_doc_count,omitempty"`
	Offset      *string `json:"offset,omitempty"`
	TimeZone    *string `json:"timeZone,omitempty"`
	TrimEdges   *string `json:"trimEdges,omitempty"`
}

// Derivative defines model for Derivative.
type Derivative struct {
	Field       *string `json:"field,omitempty"`
	Hide        *bool   `json:"hide,omitempty"`
	Id          string  `json:"id"`
	PipelineAgg *string `json:"pipelineAgg,omitempty"`
	Settings    *struct {
		Unit *string `json:"unit,omitempty"`
	} `json:"settings,omitempty"`
	Type DerivativeType `json:"type"`
}

// DerivativeType defines model for Derivative.Type.
type DerivativeType string

// ElasticsearchDataQuery defines model for ElasticsearchDataQuery.
type ElasticsearchDataQuery struct {
	// Alias pattern
	Alias *string `json:"alias,omitempty"`

	// List of bucket aggregations
	BucketAggs []BucketAggsItem `json:"bucketAggs,omitempty"`

	// For mixed data sources the selected datasource is on the query level.
	// For non mixed scenarios this is undefined.
	// TODO find a better way to do this ^ that's friendly to schema
	// TODO this shouldn't be unknown but DataSourceRef | null
	Datasource *interface{} `json:"datasource,omitempty"`

	// Hide true if query is disabled (ie should not be returned to the dashboard)
	// Note this does not always imply that the query should not be executed since
	// the results from a hidden query may be used as the input to other queries (SSE etc)
	Hide *bool `json:"hide,omitempty"`

	// List of metric aggregations
	Metrics []MetricsItem `json:"metrics,omitempty"`

	// Lucene query
	Query *string `json:"query,omitempty"`

	// Specify the query flavor
	// TODO make this required and give it a default
	QueryType *string `json:"queryType,omitempty"`

	// A unique identifier for the query within the list of targets.
	// In server side expressions, the refId is used as a variable name to identify results.
	// By default, the UI will assign A->Z; however setting meaningful names may be useful.
	RefId string `json:"refId"`

	// Name of time field
	TimeField *string `json:"timeField,omitempty"`
}

// BucketAggsSettingsOrder defines model for ElasticsearchDataQuery.BucketAggs.Settings.Order.
type BucketAggsSettingsOrder string

// BucketAggsItem defines model for ElasticsearchDataQuery.bucketAggs.Item.
type BucketAggsItem struct {
	Field    *string `json:"field,omitempty"`
	Id       *string `json:"id,omitempty"`
	Settings *struct {
		Filters []struct {
			Label string `json:"label"`
			Query string `json:"query"`
		} `json:"filters,omitempty"`
		Interval    *string                  `json:"interval,omitempty"`
		MinDocCount *string                  `json:"min_doc_count,omitempty"`
		Missing     *string                  `json:"missing,omitempty"`
		Offset      *string                  `json:"offset,omitempty"`
		Order       *BucketAggsSettingsOrder `json:"order,omitempty"`
		OrderBy     *string                  `json:"orderBy,omitempty"`
		Precision   *string                  `json:"precision,omitempty"`
		Size        *string                  `json:"size,omitempty"`
		TimeZone    *string                  `json:"timeZone,omitempty"`
		TrimEdges   *string                  `json:"trimEdges,omitempty"`
	} `json:"settings,omitempty"`
	Type  *interface{} `json:"type,omitempty"`
	union json.RawMessage
}

// MetricsSettings defines model for ElasticsearchDataQuery.Metrics.Settings.
type MetricsSettings struct {
	Format               *string                `json:"format,omitempty"`
	Lag                  *string                `json:"lag,omitempty"`
	Limit                *string                `json:"limit,omitempty"`
	Metrics              []string               `json:"metrics,omitempty"`
	Missing              *string                `json:"missing,omitempty"`
	Mode                 *string                `json:"mode,omitempty"`
	Order                *string                `json:"order,omitempty"`
	OrderBy              *string                `json:"orderBy,omitempty"`
	Percents             []string               `json:"percents,omitempty"`
	PrecisionThreshold   *string                `json:"precision_threshold,omitempty"`
	Script               *interface{}           `json:"script,omitempty"`
	Shift                *string                `json:"shift,omitempty"`
	Sigma                *string                `json:"sigma,omitempty"`
	Size                 *string                `json:"size,omitempty"`
	Unit                 *string                `json:"unit,omitempty"`
	Window               *string                `json:"window,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}

// MetricsItem defines model for ElasticsearchDataQuery.metrics.Item.
type MetricsItem struct {
	Field             *string                `json:"field,omitempty"`
	Hide              *bool                  `json:"hide,omitempty"`
	Id                *string                `json:"id,omitempty"`
	Meta              map[string]interface{} `json:"meta,omitempty"`
	PipelineAgg       *string                `json:"pipelineAgg,omitempty"`
	PipelineVariables []struct {
		Name        string `json:"name"`
		PipelineAgg string `json:"pipelineAgg"`
	} `json:"pipelineVariables,omitempty"`
	Settings *MetricsSettings `json:"settings,omitempty"`
	Type     *interface{}     `json:"type,omitempty"`
	union    json.RawMessage
}

// ExtendedStat defines model for ExtendedStat.
type ExtendedStat struct {
	Label string            `json:"label"`
	Value ExtendedStatValue `json:"value"`
}

// ExtendedStatValue defines model for ExtendedStat.Value.
type ExtendedStatValue string

// ExtendedStatMetaType defines model for ExtendedStatMetaType.
type ExtendedStatMetaType string

// ExtendedStats defines model for ExtendedStats.
type ExtendedStats struct {
	Field    *string                `json:"field,omitempty"`
	Hide     *bool                  `json:"hide,omitempty"`
	Id       string                 `json:"id"`
	Meta     map[string]interface{} `json:"meta,omitempty"`
	Settings *struct {
		Missing *string      `json:"missing,omitempty"`
		Script  *interface{} `json:"script,omitempty"`
		Sigma   *string      `json:"sigma,omitempty"`
	} `json:"settings,omitempty"`
	Type ExtendedStatsType `json:"type"`
}

// ExtendedStatsType defines model for ExtendedStats.Type.
type ExtendedStatsType string

// Filter defines model for Filter.
type Filter struct {
	Label string `json:"label"`
	Query string `json:"query"`
}

// Filters defines model for Filters.
type Filters struct {
	Id       string `json:"id"`
	Settings *struct {
		Filters []struct {
			Label string `json:"label"`
			Query string `json:"query"`
		} `json:"filters,omitempty"`
	} `json:"settings,omitempty"`
	Type FiltersType `json:"type"`
}

// FiltersType defines model for Filters.Type.
type FiltersType string

// FiltersSettings defines model for FiltersSettings.
type FiltersSettings struct {
	Filters []struct {
		Label string `json:"label"`
		Query string `json:"query"`
	} `json:"filters,omitempty"`
}

// GeoHashGrid defines model for GeoHashGrid.
type GeoHashGrid struct {
	Field    *string `json:"field,omitempty"`
	Id       string  `json:"id"`
	Settings *struct {
		Precision *string `json:"precision,omitempty"`
	} `json:"settings,omitempty"`
	Type GeoHashGridType `json:"type"`
}

// GeoHashGridType defines model for GeoHashGrid.Type.
type GeoHashGridType string

// GeoHashGridSettings defines model for GeoHashGridSettings.
type GeoHashGridSettings struct {
	Precision *string `json:"precision,omitempty"`
}

// Histogram defines model for Histogram.
type Histogram struct {
	Field    *string `json:"field,omitempty"`
	Id       string  `json:"id"`
	Settings *struct {
		Interval    *string `json:"interval,omitempty"`
		MinDocCount *string `json:"min_doc_count,omitempty"`
	} `json:"settings,omitempty"`
	Type HistogramType `json:"type"`
}

// HistogramType defines model for Histogram.Type.
type HistogramType string

// HistogramSettings defines model for HistogramSettings.
type HistogramSettings struct {
	Interval    *string `json:"interval,omitempty"`
	MinDocCount *string `json:"min_doc_count,omitempty"`
}

// Logs defines model for Logs.
type Logs struct {
	Hide     *bool  `json:"hide,omitempty"`
	Id       string `json:"id"`
	Settings *struct {
		Limit *string `json:"limit,omitempty"`
	} `json:"settings,omitempty"`
	Type LogsType `json:"type"`
}

// LogsType defines model for Logs.Type.
type LogsType string

// Max defines model for Max.
type Max struct {
	Field    *string `json:"field,omitempty"`
	Hide     *bool   `json:"hide,omitempty"`
	Id       string  `json:"id"`
	Settings *struct {
		Missing *string      `json:"missing,omitempty"`
		Script  *interface{} `json:"script,omitempty"`
	} `json:"settings,omitempty"`
	Type MaxType `json:"type"`
}

// MaxType defines model for Max.Type.
type MaxType string

// MetricAggregation defines model for MetricAggregation.
type MetricAggregation struct {
	Field             *string                `json:"field,omitempty"`
	Hide              *bool                  `json:"hide,omitempty"`
	Id                *string                `json:"id,omitempty"`
	Meta              map[string]interface{} `json:"meta,omitempty"`
	PipelineAgg       *string                `json:"pipelineAgg,omitempty"`
	PipelineVariables []struct {
		Name        string `json:"name"`
		PipelineAgg string `json:"pipelineAgg"`
	} `json:"pipelineVariables,omitempty"`
	Settings *MetricAggregationSettings `json:"settings,omitempty"`
	Type     *interface{}               `json:"type,omitempty"`
	union    json.RawMessage
}

// MetricAggregationSettings defines model for MetricAggregation.Settings.
type MetricAggregationSettings struct {
	Format               *string                `json:"format,omitempty"`
	Lag                  *string                `json:"lag,omitempty"`
	Limit                *string                `json:"limit,omitempty"`
	Metrics              []string               `json:"metrics,omitempty"`
	Missing              *string                `json:"missing,omitempty"`
	Mode                 *string                `json:"mode,omitempty"`
	Order                *string                `json:"order,omitempty"`
	OrderBy              *string                `json:"orderBy,omitempty"`
	Percents             []string               `json:"percents,omitempty"`
	PrecisionThreshold   *string                `json:"precision_threshold,omitempty"`
	Script               *interface{}           `json:"script,omitempty"`
	Shift                *string                `json:"shift,omitempty"`
	Sigma                *string                `json:"sigma,omitempty"`
	Size                 *string                `json:"size,omitempty"`
	Unit                 *string                `json:"unit,omitempty"`
	Window               *string                `json:"window,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}

// MetricAggregationType defines model for MetricAggregationType.
type MetricAggregationType string

// MetricAggregationWithField defines model for MetricAggregationWithField.
type MetricAggregationWithField struct {
	Field *string                        `json:"field,omitempty"`
	Hide  *bool                          `json:"hide,omitempty"`
	Id    string                         `json:"id"`
	Type  MetricAggregationWithFieldType `json:"type"`
}

// MetricAggregationWithFieldType defines model for MetricAggregationWithField.Type.
type MetricAggregationWithFieldType string

// MetricAggregationWithInlineScript defines model for MetricAggregationWithInlineScript.
type MetricAggregationWithInlineScript struct {
	Hide     *bool  `json:"hide,omitempty"`
	Id       string `json:"id"`
	Settings *struct {
		Script *interface{} `json:"script,omitempty"`
	} `json:"settings,omitempty"`
	Type MetricAggregationWithInlineScriptType `json:"type"`
}

// MetricAggregationWithInlineScriptType defines model for MetricAggregationWithInlineScript.Type.
type MetricAggregationWithInlineScriptType string

// MetricAggregationWithMissingSupport defines model for MetricAggregationWithMissingSupport.
type MetricAggregationWithMissingSupport struct {
	Hide     *bool  `json:"hide,omitempty"`
	Id       string `json:"id"`
	Settings *struct {
		Missing *string `json:"missing,omitempty"`
	} `json:"settings,omitempty"`
	Type MetricAggregationWithMissingSupportType `json:"type"`
}

// MetricAggregationWithMissingSupportType defines model for MetricAggregationWithMissingSupport.Type.
type MetricAggregationWithMissingSupportType string

// MetricAggregationWithSettings defines model for MetricAggregationWithSettings.
type MetricAggregationWithSettings struct {
	Field             *string                `json:"field,omitempty"`
	Hide              *bool                  `json:"hide,omitempty"`
	Id                *string                `json:"id,omitempty"`
	Meta              map[string]interface{} `json:"meta,omitempty"`
	PipelineAgg       *string                `json:"pipelineAgg,omitempty"`
	PipelineVariables []struct {
		Name        string `json:"name"`
		PipelineAgg string `json:"pipelineAgg"`
	} `json:"pipelineVariables,omitempty"`
	Settings *MetricAggregationWithSettingsSettings `json:"settings,omitempty"`
	Type     *interface{}                           `json:"type,omitempty"`
	union    json.RawMessage
}

// MetricAggregationWithSettingsSettings defines model for MetricAggregationWithSettings.Settings.
type MetricAggregationWithSettingsSettings struct {
	Format               *string                `json:"format,omitempty"`
	Lag                  *string                `json:"lag,omitempty"`
	Limit                *string                `json:"limit,omitempty"`
	Metrics              []string               `json:"metrics,omitempty"`
	Missing              *string                `json:"missing,omitempty"`
	Mode                 *string                `json:"mode,omitempty"`
	Order                *string                `json:"order,omitempty"`
	OrderBy              *string                `json:"orderBy,omitempty"`
	Percents             []string               `json:"percents,omitempty"`
	PrecisionThreshold   *string                `json:"precision_threshold,omitempty"`
	Script               *interface{}           `json:"script,omitempty"`
	Shift                *string                `json:"shift,omitempty"`
	Sigma                *string                `json:"sigma,omitempty"`
	Size                 *string                `json:"size,omitempty"`
	Unit                 *string                `json:"unit,omitempty"`
	Window               *string                `json:"window,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Min defines model for Min.
type Min struct {
	Field    *string `json:"field,omitempty"`
	Hide     *bool   `json:"hide,omitempty"`
	Id       string  `json:"id"`
	Settings *struct {
		Missing *string      `json:"missing,omitempty"`
		Script  *interface{} `json:"script,omitempty"`
	} `json:"settings,omitempty"`
	Type MinType `json:"type"`
}

// MinType defines model for Min.Type.
type MinType string

// #MovingAverage's settings are overridden in types.ts
type MovingAverage struct {
	Field       *string                `json:"field,omitempty"`
	Hide        *bool                  `json:"hide,omitempty"`
	Id          string                 `json:"id"`
	PipelineAgg *string                `json:"pipelineAgg,omitempty"`
	Settings    map[string]interface{} `json:"settings,omitempty"`
	Type        MovingAverageType      `json:"type"`
}

// MovingAverageType defines model for MovingAverage.Type.
type MovingAverageType string

// MovingAverageEWMAModelSettings defines model for MovingAverageEWMAModelSettings.
type MovingAverageEWMAModelSettings struct {
	Minimize bool                                `json:"minimize"`
	Model    MovingAverageEWMAModelSettingsModel `json:"model"`
	Predict  string                              `json:"predict"`
	Settings *struct {
		Alpha *string `json:"alpha,omitempty"`
	} `json:"settings,omitempty"`
	Window string `json:"window"`
}

// MovingAverageEWMAModelSettingsModel defines model for MovingAverageEWMAModelSettings.Model.
type MovingAverageEWMAModelSettingsModel string

// MovingAverageHoltModelSettings defines model for MovingAverageHoltModelSettings.
type MovingAverageHoltModelSettings struct {
	Minimize bool                                `json:"minimize"`
	Model    MovingAverageHoltModelSettingsModel `json:"model"`
	Predict  string                              `json:"predict"`
	Settings struct {
		Alpha *string `json:"alpha,omitempty"`
		Beta  *string `json:"beta,omitempty"`
	} `json:"settings"`
	Window string `json:"window"`
}

// MovingAverageHoltModelSettingsModel defines model for MovingAverageHoltModelSettings.Model.
type MovingAverageHoltModelSettingsModel string

// MovingAverageHoltWintersModelSettings defines model for MovingAverageHoltWintersModelSettings.
type MovingAverageHoltWintersModelSettings struct {
	Minimize bool                                       `json:"minimize"`
	Model    MovingAverageHoltWintersModelSettingsModel `json:"model"`
	Predict  string                                     `json:"predict"`
	Settings struct {
		Alpha  *string `json:"alpha,omitempty"`
		Beta   *string `json:"beta,omitempty"`
		Gamma  *string `json:"gamma,omitempty"`
		Pad    *bool   `json:"pad,omitempty"`
		Period *string `json:"period,omitempty"`
	} `json:"settings"`
	Window string `json:"window"`
}

// MovingAverageHoltWintersModelSettingsModel defines model for MovingAverageHoltWintersModelSettings.Model.
type MovingAverageHoltWintersModelSettingsModel string

// MovingAverageLinearModelSettings defines model for MovingAverageLinearModelSettings.
type MovingAverageLinearModelSettings struct {
	Model   MovingAverageLinearModelSettingsModel `json:"model"`
	Predict string                                `json:"predict"`
	Window  string                                `json:"window"`
}

// MovingAverageLinearModelSettingsModel defines model for MovingAverageLinearModelSettings.Model.
type MovingAverageLinearModelSettingsModel string

// MovingAverageModel defines model for MovingAverageModel.
type MovingAverageModel string

// MovingAverageModelOption defines model for MovingAverageModelOption.
type MovingAverageModelOption struct {
	Label string                        `json:"label"`
	Value MovingAverageModelOptionValue `json:"value"`
}

// MovingAverageModelOptionValue defines model for MovingAverageModelOption.Value.
type MovingAverageModelOptionValue string

// MovingAverageSimpleModelSettings defines model for MovingAverageSimpleModelSettings.
type MovingAverageSimpleModelSettings struct {
	Model   MovingAverageSimpleModelSettingsModel `json:"model"`
	Predict string                                `json:"predict"`
	Window  string                                `json:"window"`
}

// MovingAverageSimpleModelSettingsModel defines model for MovingAverageSimpleModelSettings.Model.
type MovingAverageSimpleModelSettingsModel string

// MovingFunction defines model for MovingFunction.
type MovingFunction struct {
	Field       *string `json:"field,omitempty"`
	Hide        *bool   `json:"hide,omitempty"`
	Id          string  `json:"id"`
	PipelineAgg *string `json:"pipelineAgg,omitempty"`
	Settings    *struct {
		Script *interface{} `json:"script,omitempty"`
		Shift  *string      `json:"shift,omitempty"`
		Window *string      `json:"window,omitempty"`
	} `json:"settings,omitempty"`
	Type MovingFunctionType `json:"type"`
}

// MovingFunctionType defines model for MovingFunction.Type.
type MovingFunctionType string

// Nested defines model for Nested.
type Nested struct {
	Field    *string                `json:"field,omitempty"`
	Id       string                 `json:"id"`
	Settings map[string]interface{} `json:"settings,omitempty"`
	Type     NestedType             `json:"type"`
}

// NestedType defines model for Nested.Type.
type NestedType string

// Percentiles defines model for Percentiles.
type Percentiles struct {
	Field    *string `json:"field,omitempty"`
	Hide     *bool   `json:"hide,omitempty"`
	Id       string  `json:"id"`
	Settings *struct {
		Missing  *string      `json:"missing,omitempty"`
		Percents []string     `json:"percents,omitempty"`
		Script   *interface{} `json:"script,omitempty"`
	} `json:"settings,omitempty"`
	Type PercentilesType `json:"type"`
}

// PercentilesType defines model for Percentiles.Type.
type PercentilesType string

// PipelineMetricAggregation defines model for PipelineMetricAggregation.
type PipelineMetricAggregation struct {
	Field             *string `json:"field,omitempty"`
	Hide              *bool   `json:"hide,omitempty"`
	Id                *string `json:"id,omitempty"`
	PipelineAgg       *string `json:"pipelineAgg,omitempty"`
	PipelineVariables []struct {
		Name        string `json:"name"`
		PipelineAgg string `json:"pipelineAgg"`
	} `json:"pipelineVariables,omitempty"`
	Settings *PipelineMetricAggregationSettings `json:"settings,omitempty"`
	Type     *interface{}                       `json:"type,omitempty"`
	union    json.RawMessage
}

// PipelineMetricAggregationSettings defines model for PipelineMetricAggregation.Settings.
type PipelineMetricAggregationSettings struct {
	Format               *string                `json:"format,omitempty"`
	Script               *interface{}           `json:"script,omitempty"`
	Unit                 *string                `json:"unit,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}

// PipelineMetricAggregationType defines model for PipelineMetricAggregationType.
type PipelineMetricAggregationType string

// PipelineMetricAggregationWithMultipleBucketPaths defines model for PipelineMetricAggregationWithMultipleBucketPaths.
type PipelineMetricAggregationWithMultipleBucketPaths struct {
	Hide              *bool  `json:"hide,omitempty"`
	Id                string `json:"id"`
	PipelineVariables []struct {
		Name        string `json:"name"`
		PipelineAgg string `json:"pipelineAgg"`
	} `json:"pipelineVariables,omitempty"`
	Type PipelineMetricAggregationWithMultipleBucketPathsType `json:"type"`
}

// PipelineMetricAggregationWithMultipleBucketPathsType defines model for PipelineMetricAggregationWithMultipleBucketPaths.Type.
type PipelineMetricAggregationWithMultipleBucketPathsType string

// PipelineVariable defines model for PipelineVariable.
type PipelineVariable struct {
	Name        string `json:"name"`
	PipelineAgg string `json:"pipelineAgg"`
}

// Rate defines model for Rate.
type Rate struct {
	Field    *string `json:"field,omitempty"`
	Hide     *bool   `json:"hide,omitempty"`
	Id       string  `json:"id"`
	Settings *struct {
		Mode *string `json:"mode,omitempty"`
		Unit *string `json:"unit,omitempty"`
	} `json:"settings,omitempty"`
	Type RateType `json:"type"`
}

// RateType defines model for Rate.Type.
type RateType string

// RawData defines model for RawData.
type RawData struct {
	Hide     *bool  `json:"hide,omitempty"`
	Id       string `json:"id"`
	Settings *struct {
		Size *string `json:"size,omitempty"`
	} `json:"settings,omitempty"`
	Type RawDataType `json:"type"`
}

// RawDataType defines model for RawData.Type.
type RawDataType string

// RawDocument defines model for RawDocument.
type RawDocument struct {
	Hide     *bool  `json:"hide,omitempty"`
	Id       string `json:"id"`
	Settings *struct {
		Size *string `json:"size,omitempty"`
	} `json:"settings,omitempty"`
	Type RawDocumentType `json:"type"`
}

// RawDocumentType defines model for RawDocument.Type.
type RawDocumentType string

// SerialDiff defines model for SerialDiff.
type SerialDiff struct {
	Field       *string `json:"field,omitempty"`
	Hide        *bool   `json:"hide,omitempty"`
	Id          string  `json:"id"`
	PipelineAgg *string `json:"pipelineAgg,omitempty"`
	Settings    *struct {
		Lag *string `json:"lag,omitempty"`
	} `json:"settings,omitempty"`
	Type SerialDiffType `json:"type"`
}

// SerialDiffType defines model for SerialDiff.Type.
type SerialDiffType string

// Sum defines model for Sum.
type Sum struct {
	Field    *string `json:"field,omitempty"`
	Hide     *bool   `json:"hide,omitempty"`
	Id       string  `json:"id"`
	Settings *struct {
		Missing *string      `json:"missing,omitempty"`
		Script  *interface{} `json:"script,omitempty"`
	} `json:"settings,omitempty"`
	Type SumType `json:"type"`
}

// SumType defines model for Sum.Type.
type SumType string

// Terms defines model for Terms.
type Terms struct {
	Field    *string `json:"field,omitempty"`
	Id       string  `json:"id"`
	Settings *struct {
		MinDocCount *string             `json:"min_doc_count,omitempty"`
		Missing     *string             `json:"missing,omitempty"`
		Order       *TermsSettingsOrder `json:"order,omitempty"`
		OrderBy     *string             `json:"orderBy,omitempty"`
		Size        *string             `json:"size,omitempty"`
	} `json:"settings,omitempty"`
	Type TermsType `json:"type"`
}

// TermsSettingsOrder defines model for Terms.Settings.Order.
type TermsSettingsOrder string

// TermsType defines model for Terms.Type.
type TermsType string

// TermsOrder defines model for TermsOrder.
type TermsOrder string

// TermsSettings defines model for TermsSettings.
type TermsSettings struct {
	MinDocCount *string             `json:"min_doc_count,omitempty"`
	Missing     *string             `json:"missing,omitempty"`
	Order       *TermsSettingsOrder `json:"order,omitempty"`
	OrderBy     *string             `json:"orderBy,omitempty"`
	Size        *string             `json:"size,omitempty"`
}

// TopMetrics defines model for TopMetrics.
type TopMetrics struct {
	Hide     *bool  `json:"hide,omitempty"`
	Id       string `json:"id"`
	Settings *struct {
		Metrics []string `json:"metrics,omitempty"`
		Order   *string  `json:"order,omitempty"`
		OrderBy *string  `json:"orderBy,omitempty"`
	} `json:"settings,omitempty"`
	Type TopMetricsType `json:"type"`
}

// TopMetricsType defines model for TopMetrics.Type.
type TopMetricsType string

// UniqueCount defines model for UniqueCount.
type UniqueCount struct {
	Field    *string `json:"field,omitempty"`
	Hide     *bool   `json:"hide,omitempty"`
	Id       string  `json:"id"`
	Settings *struct {
		Missing            *string `json:"missing,omitempty"`
		PrecisionThreshold *string `json:"precision_threshold,omitempty"`
	} `json:"settings,omitempty"`
	Type UniqueCountType `json:"type"`
}

// UniqueCountType defines model for UniqueCount.Type.
type UniqueCountType string
